package main

import (
	"fmt"
	token "go_project/erc20"
	"log"
	"math"
	"math/big"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/ethclient"
	// for demo
)

func main() {
	client, err := ethclient.Dial("https://sepolia.infura.io/v3/5e8e4dda12b048d087bbddc2b9b495e4") // 由于没有主网APIKEY 所以查询不到下面的代币地址
	if err != nil {
		log.Fatal(err)
	}

	// 测试网的 MockToken 代币合约地址
	tokenAddress := common.HexToAddress("0x800eC0D65adb70f0B69B7Db052C6bd89C2406aC4")
	instance, err := token.NewToken(tokenAddress, client)
	if err != nil {
		log.Fatal(err)
	}

	// 查询代币余额的账户地址
	address := common.HexToAddress("0x32D5bcc041B7A8285fDa2a03b4C41eBFFdc62bc9")
	bal, err := instance.BalanceOf(&bind.CallOpts{}, address)
	if err != nil {
		log.Fatal(err)
	}

	name, err := instance.Name(&bind.CallOpts{})
	if err != nil {
		log.Fatal(err)
	}

	symbol, err := instance.Symbol(&bind.CallOpts{})
	if err != nil {
		log.Fatal(err)
	}

	decimals, err := instance.Decimals(&bind.CallOpts{})
	if err != nil {
		log.Fatal(err)
	}

	fmt.Printf("name: %s\n", name)         // "name: MockToken"
	fmt.Printf("symbol: %s\n", symbol)     // "symbol: MOCK"
	fmt.Printf("decimals: %v\n", decimals) // "decimals: 18"

	fmt.Printf("wei: %s\n", bal) // "wei: 74605500647408739782407023"

	fbal := new(big.Float)
	fbal.SetString(bal.String())
	value := new(big.Float).Quo(fbal, big.NewFloat(math.Pow10(int(decimals))))

	fmt.Printf("balance: %f", value) // "balance: 74605500.647409"
}
